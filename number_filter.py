# =======================================================
# リスト内の数字の合計を計算する関数
# ただし、負の数を見つけたら処理を中断（終了）するロジックが入っています。
# また、3の倍数は合計から除外されます。
# =======================================================

def calculate_special_sum(data_list):
    """
    与えられた数値リスト内の特殊な合計を計算します。
    - 3の倍数は合計に含めません。
    - 負の数がリスト内に存在する場合、その時点で処理を中断し、0を返します。
    """
    
    # 最終的な合計を格納するための変数
    total_result = 0
    
    # リストをイテレートし、各要素を処理します
    for element in data_list:
        
        # まず、要素が負の数かどうかをチェックします
        # 負の数が見つかった場合、要件に従いすぐに処理を終了します
        if element < 0:
            print("注意: 負の数が見つかったため、処理を中断します。")
            return 0  # 負の数が見つかった場合は0を返す
        
        # 要素が3の倍数かどうかをチェックします
        # ここでは 'else' ブロックを使って、3の倍数ではない場合にのみ処理を進めます
        if (element % 3) == 0:
            # 3の倍数の場合は何もしません（合計に含めない）
            pass
        else:
            # 3の倍数ではない場合は、合計に加えます
            total_result += element
            
    # 全ての要素を処理し終えた後の合計値を返します
    return total_result

# 実行例
test_data_1 = [1, 5, 9, 10, 2] # 9は3の倍数なので除外
# 期待される合計: 1 + 5 + 10 + 2 = 18

test_data_2 = [1, 5, -2, 10] # -2があるので処理が中断され、0が返される

print(f"データ1: {test_data_1}")
print(f"結果1: {calculate_special_sum(test_data_1)}")

print("-" * 20)

print(f"データ2: {test_data_2}")
print(f"結果2: {calculate_special_sum(test_data_2)}")
